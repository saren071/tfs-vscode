{
  "scopeName": "source.tfs",
  "patterns": [
    { "include": "#comments" },
    { "include": "#directives" },
    { "include": "#components" },
    { "include": "#states" },
    { "include": "#properties" },
    { "include": "#values" },
    { "include": "#numbers" },
    { "include": "#strings" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        { "begin": "//", "end": "$", "name": "comment.line.double-slash.tfs" },
        { "begin": "/\\*", "end": "\\*/", "name": "comment.block.tfs" }
      ]
    },
    "directives": {
      "patterns": [
        {
          "match": "@(colors|fonts|keyframes|media)\\b",
          "name": "keyword.control.directive.tfs"
        }
      ]
    },
    "components": {
      "patterns": [
        {
          "match": "\\b[A-Z][A-Za-z0-9_-]*\\b(?=\\s*\\{)",
          "name": "entity.name.type.component.tfs"
        }
      ]
    },
    "states": {
      "patterns": [
        {
          "begin": "(\\[)",
          "beginCaptures": { "1": { "name": "entity.name.state.tfs" } },
          "end": "(\\])",
          "endCaptures": { "1": { "name": "entity.name.state.tfs" } },
          "name": "entity.name.state.tfs",
          "patterns": [
            { "match": "[a-zA-Z0-9_-]+", "name": "entity.name.state.tfs" },
            { "match": ",", "name": "entity.name.state.tfs" },
            { "match": "\\s+", "name": "entity.name.state.tfs" }
          ]
        }
      ]
    },
    "properties": {
      "patterns": [
        {
          "match": "\\b[a-zA-Z][a-zA-Z0-9_-]*\\b(?=\\s*:)",
          "name": "support.type.property-name.tfs"
        }
      ]
    },
    "values": {
      "patterns": [
        { "match": "#[0-9A-Fa-f]{3,8}\\b", "name": "constant.other.color.hex.tfs" },
        { "match": "rgba?\\([^)]*\\)", "name": "support.function.color.tfs" },
        {
          "match": "(?<=:)\\s*([A-Za-z_][A-Za-z0-9_-]*)",
          "name": "variable.parameter.property-value.tfs"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "\\b[0-9]+(\\.[0-9]+)?(px|em|cell|%)?\\b",
          "name": "constant.numeric.unit.tfs"
        }
      ]
    },
    "strings": {
      "patterns": [
        { "begin": "\"", "end": "\"", "name": "string.quoted.double.tfs" }
      ]
    }
  }
}
